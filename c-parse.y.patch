diff -up ./buildroot/toolchain_build_mips/gcc-3.3.5/gcc/c-parse.y.orig ./buildroot/toolchain_build_mips/gcc-3.3.5/gcc/c-parse.y
--- ./buildroot/toolchain_build_mips/gcc-3.3.5/gcc/c-parse.y.orig	2019-01-11 19:15:57.511773062 -0800
+++ ./buildroot/toolchain_build_mips/gcc-3.3.5/gcc/c-parse.y	2019-01-11 19:17:27.412188718 -0800
@@ -50,6 +50,9 @@ Software Foundation, 59 Temple Place - S
 #include <locale.h>
 #endif
 
+#ifndef YYLEX
+#define YYLEX yylex ()
+#endif
 
 /* Like YYERROR but do call yyerror.  */
 #define YYERROR1 { yyerror ("syntax error"); YYERROR; }
@@ -1661,7 +1664,7 @@ enum_head:
 
 structsp_attr:
 	  struct_head identifier '{'
-		{ $$ = start_struct (RECORD_TYPE, $2);
+		{ $<ttype>$ = start_struct (RECORD_TYPE, $2);
 		  /* Start scope of tag before parsing components.  */
 		}
 	  component_decl_list '}' maybe_attribute
@@ -1671,7 +1674,7 @@ structsp_attr:
 				      $3, chainon ($1, $5));
 		}
 	| union_head identifier '{'
-		{ $$ = start_struct (UNION_TYPE, $2); }
+		{ $<ttype>$ = start_struct (UNION_TYPE, $2); }
 	  component_decl_list '}' maybe_attribute
 		{ $$ = finish_struct ($<ttype>4, $5, chainon ($1, $7)); }
 	| union_head '{' component_decl_list '}' maybe_attribute
@@ -1679,12 +1682,12 @@ structsp_attr:
 				      $3, chainon ($1, $5));
 		}
 	| enum_head identifier '{'
-		{ $$ = start_enum ($2); }
+		{ $<ttype>$ = start_enum ($2); }
 	  enumlist maybecomma_warn '}' maybe_attribute
 		{ $$ = finish_enum ($<ttype>4, nreverse ($5),
 				    chainon ($1, $8)); }
 	| enum_head '{'
-		{ $$ = start_enum (NULL_TREE); }
+		{ $<ttype>$ = start_enum (NULL_TREE); }
 	  enumlist maybecomma_warn '}' maybe_attribute
 		{ $$ = finish_enum ($<ttype>3, nreverse ($4),
 				    chainon ($1, $7)); }
